{
  "contractName": "IActor",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "LogAddActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "LogCooperativeAddActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "LogDestroyActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "LogCooperativeDestroyActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_allowed",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "LogApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_allowed",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        }
      ],
      "name": "LogCooperativeApproval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getAccountType",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSenderRole",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "actorExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_allower",
          "type": "address"
        },
        {
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "addActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_role",
          "type": "bytes32"
        },
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "cooperativeAddActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_allowed",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_allower",
          "type": "address"
        },
        {
          "name": "_allowed",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "cooperativeApprove",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroyActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "cooperativeDestroyActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cooperative",
          "type": "address"
        }
      ],
      "name": "isCooperative",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_farmer",
          "type": "address"
        }
      ],
      "name": "isFarmer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isCertifier",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isTechnician",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isTaster",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isBenefit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isRoaster",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isTechnician\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isBenefit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isCertifier\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSenderRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"actorExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"cooperativeDestroyActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isTaster\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"addActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_allower\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"isAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cooperative\",\"type\":\"address\"}],\"name\":\"isCooperative\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAccountType\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_farmer\",\"type\":\"address\"}],\"name\":\"isFarmer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_role\",\"type\":\"bytes32\"},{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"cooperativeAddActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isRoaster\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allower\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"cooperativeApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"LogAddActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"LogCooperativeAddActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"LogDestroyActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"LogCooperativeDestroyActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_allowed\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"LogApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_allowed\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"}],\"name\":\"LogCooperativeApproval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"actorExists(address)\":{\"params\":{\"_actorAddress\":\"address of actor to check\"},\"return\":\"true if is exists false if not\"},\"addActor(bytes32)\":{\"params\":{\"_role\":\"type of account of the actor.\"}},\"approve(address,bool)\":{\"params\":{\"_allowed\":\"address of actor to assign the permission.\",\"_value\":\"value to be set.\"},\"return\":\"true if is success\"},\"cooperativeAddActor(bytes32,address)\":{\"details\":\"Only Cooperatives can call this method\",\"params\":{\"_actorAddress\":\"address of the actor.\",\"_role\":\"type of account of the actor.\"}},\"cooperativeApprove(address,address,bool)\":{\"details\":\"Only Cooperatives can call this method\",\"params\":{\"_allowed\":\"address of actor to assign the permission.\",\"_allower\":\"address of actor to giving the permission.\",\"_value\":\"value to be set.\"},\"return\":\"true if is success\"},\"cooperativeDestroyActor(address)\":{\"details\":\"Only Cooperatives can call this methodonly actor can destroy account\",\"params\":{\"_actorAddress\":\"address of the actor.\"}},\"destroyActor()\":{\"details\":\"only actor can destroy account\"},\"getAccountType(address)\":{\"params\":{\"_owner\":\"address of the owner.\"},\"return\":\"returns a bytes32 with the type of account or empty if there is no account\"},\"getSenderRole()\":{\"return\":\"returns a bytes32 with the type of account or empty if there is no account\"},\"isAllowed(address,address)\":{\"params\":{\"_allowed\":\"address of the actor to check if has permission.\",\"_allower\":\"address of the allower.\"},\"return\":\"returns true if _allowed has permission, false otherwise.\"},\"isBenefit(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isCertifier(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isCooperative(address)\":{\"params\":{\"_cooperative\":\"The address to be checked\"},\"return\":\"true if the address passed to the function belongs to a cooperative false otherwise\"},\"isFarmer(address)\":{\"params\":{\"_farmer\":\"The address to be checked\"},\"return\":\"true if the address passed to the function belongs to a farmer false otherwise\"},\"isRoaster(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isTaster(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isTechnician(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isValidator(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"}}},\"userdoc\":{\"methods\":{\"actorExists(address)\":{\"notice\":\"checks if an actor exists\"},\"addActor(bytes32)\":{\"notice\":\"creates a new actor from sender\"},\"approve(address,bool)\":{\"notice\":\"approves actor\"},\"cooperativeAddActor(bytes32,address)\":{\"notice\":\"Cooperative creates new actor\"},\"cooperativeApprove(address,address,bool)\":{\"notice\":\"approves actor from cooperative\"},\"cooperativeDestroyActor(address)\":{\"notice\":\"destroys an actor\"},\"destroyActor()\":{\"notice\":\"destroys an actor\"},\"getAccountType(address)\":{\"notice\":\"Gets the type of the account.\"},\"getSenderRole()\":{\"notice\":\"Gets the type of the sender account.\"},\"isAllowed(address,address)\":{\"notice\":\"Checks if a user has permission from another user.\"},\"isBenefit(address)\":{\"notice\":\"checks if account is a benefit\"},\"isCertifier(address)\":{\"notice\":\"checks if account is a certifier\"},\"isCooperative(address)\":{\"notice\":\"Returns true if the address passed to it belongs to a cooperative account\"},\"isFarmer(address)\":{\"notice\":\"Returns true if the address passed to it belongs to a farmer account\"},\"isRoaster(address)\":{\"notice\":\"checks if account is a roaster\"},\"isTaster(address)\":{\"notice\":\"checks if account is a taster\"},\"isTechnician(address)\":{\"notice\":\"checks if account is a technician\"},\"isValidator(address)\":{\"notice\":\"checks if account is a validator\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/IActor.sol\":\"IActor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/IActor.sol\":{\"keccak256\":\"0x93adf2cec70c095f7f853e7d494e77c49350c9909eacdd75a6c76a17a0160704\",\"urls\":[\"bzzr://1abe3fe8fcd7805cd2d8f70166685523f43e0fc49d998b2d1fa4834925578dff\",\"dweb:/ipfs/QmXh9uRXQHN1F9wpbGeEyztZMWvBW5AF95yuDCE8LhgCJG\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.9;\n\ninterface IActor {\n\n    /** @notice Gets the type of the account.\n      * @param _owner address of the owner.\n      * @return returns a bytes32 with the type of account or empty if there is no account\n      */\n    function getAccountType(address _owner) external view returns (bytes32);\n\n    /** @notice Gets the type of the sender account.\n      * @return returns a bytes32 with the type of account or empty if there is no account\n      */\n    function getSenderRole() external view returns (bytes32);\n\n    /** @notice checks if an actor exists\n      * @param _actorAddress address of actor to check\n      * @return true if is exists false if not\n      */\n    function actorExists(address _actorAddress) external view returns(bool);\n\n    /** @notice Checks if a user has permission from another user.\n      * @param _allower address of the allower.\n      * @param _allowed address of the actor to check if has permission.\n      * @return returns true if _allowed has permission, false otherwise.\n      */\n    function isAllowed(address _allower, address _allowed) external view returns (bool);\n\n    /** @notice creates a new actor from sender\n      * @param _role type of account of the actor.\n      */\n    function addActor(bytes32 _role) external;\n\n    /** @notice Cooperative creates new actor\n      * @param _role type of account of the actor.\n      * @param _actorAddress address of the actor.\n      * @dev Only Cooperatives can call this method\n      */\n    function cooperativeAddActor(\n        bytes32 _role,\n        address _actorAddress\n    ) external;\n\n    /** @notice approves actor\n      * @param _allowed address of actor to assign the permission.\n      * @param _value value to be set.\n      * @return true if is success\n      */\n    function approve(address _allowed, bool _value) external returns (bool);\n\n    /** @notice approves actor from cooperative\n      * @param _allower address of actor to giving the permission.\n      * @param _allowed address of actor to assign the permission.\n      * @param _value value to be set.\n      * @return true if is success\n      * @dev Only Cooperatives can call this method\n      */\n    function cooperativeApprove(address _allower, address _allowed, bool _value) external  returns (bool);\n\n    /** @notice destroys an actor\n      * @dev only actor can destroy account\n      */\n    function destroyActor() external;\n\n    /** @notice destroys an actor\n      * @param _actorAddress address of the actor.\n      * @dev Only Cooperatives can call this method\n      * @dev only actor can destroy account\n      */\n    function cooperativeDestroyActor(address _actorAddress) external;\n\n    /** @notice Returns true if the address passed to it belongs to a cooperative account\n      * @param _cooperative The address to be checked\n      * @return true if the address passed to the function belongs to a cooperative false otherwise\n      */\n    function isCooperative(address _cooperative) external view returns (bool);\n\n    /** @notice Returns true if the address passed to it belongs to a farmer account\n      * @param _farmer The address to be checked\n      * @return true if the address passed to the function belongs to a farmer false otherwise\n      */\n    function isFarmer(address _farmer) external view returns (bool);\n\n    /** @notice checks if account is a certifier\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isCertifier(address _accountAddress) external view returns (bool);\n\n    /** @notice checks if account is a technician\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isTechnician(address _accountAddress) external view returns (bool);\n\n    /** @notice checks if account is a taster\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isTaster(address _accountAddress) external view returns (bool);\n\n    /** @notice checks if account is a validator\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isValidator(address _accountAddress) external view returns (bool);\n\n    /** @notice checks if account is a benefit\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isBenefit(address _accountAddress) external view returns (bool);\n\n    /** @notice checks if account is a roaster\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isRoaster(address _accountAddress) external view returns (bool);\n\n    /** @notice Logs when an Actor is created. */\n    event LogAddActor(\n        address _actorAddress,\n        bytes32 _role\n    );\n\n    /** @notice Logs when a cooperative creates an Actor. */\n    event LogCooperativeAddActor(\n        address _cooperativeAddress,\n        address _actorAddress,\n        bytes32 _role\n    );\n\n    /** @notice Logs when an Actor is destroyed. */\n    event LogDestroyActor(\n        address _actorAddress\n    );\n\n    /** @notice Logs when a cooperative destroys an Actor. */\n    event LogCooperativeDestroyActor(\n        address _cooperativeAddress,\n        address _actorAddress\n    );\n\n    /** @notice Logs when an Actor gives permission. */\n    event LogApproval(\n        address indexed _owner,\n        address indexed _allowed,\n        bool _value\n    );\n\n    /** @notice Logs when a Cooperative approves for an Actor. */\n    event LogCooperativeApproval(\n        address indexed _owner,\n        address indexed _allowed,\n        bool _value,\n        address _cooperativeAddress\n    );\n}\n",
  "sourcePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/IActor.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/IActor.sol",
    "exportedSymbols": {
      "IActor": [
        2091
      ]
    },
    "id": 2092,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1924,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2091,
        "linearizedBaseContracts": [
          2091
        ],
        "name": "IActor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Gets the type of the account.\n@param _owner address of the owner.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 1931,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1926,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1931,
                  "src": "263:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:16:5"
            },
            "returnParameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1929,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1931,
                  "src": "302:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1928,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:9:5"
            },
            "scope": 2091,
            "src": "239:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the type of the sender account.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 1936,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:2:5"
            },
            "returnParameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1936,
                  "src": "518:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "517:9:5"
            },
            "scope": 2091,
            "src": "470:57:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if an actor exists\n@param _actorAddress address of actor to check\n@return true if is exists false if not",
            "id": 1943,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "actorExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "707:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:23:5"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "752:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "751:6:5"
            },
            "scope": 2091,
            "src": "686:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Checks if a user has permission from another user.\n@param _allower address of the allower.\n@param _allowed address of the actor to check if has permission.\n@return returns true if _allowed has permission, false otherwise.",
            "id": 1952,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1054:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1947,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1072:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1053:36:5"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1113:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:6:5"
            },
            "scope": 2091,
            "src": "1035:84:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice creates a new actor from sender\n@param _role type of account of the actor.",
            "id": 1957,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1954,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "1251:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:15:5"
            },
            "returnParameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:5"
            },
            "scope": 2091,
            "src": "1233:42:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Cooperative creates new actor\n@param _role type of account of the actor.\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method",
            "id": 1964,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeAddActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 1964,
                  "src": "1528:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1964,
                  "src": "1551:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1518:60:5"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:5"
            },
            "scope": 2091,
            "src": "1490:98:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice approves actor\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success",
            "id": 1973,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1792:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1968,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1810:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:31:5"
            },
            "returnParameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1841:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:6:5"
            },
            "scope": 2091,
            "src": "1775:72:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice approves actor from cooperative\n@param _allower address of actor to giving the permission.\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success\n@dev Only Cooperatives can call this method",
            "id": 1984,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2198:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2216:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2216:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1979,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2234:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2197:49:5"
            },
            "returnParameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2266:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2265:6:5"
            },
            "scope": 2091,
            "src": "2170:102:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice destroys an actor\n@dev only actor can destroy account",
            "id": 1987,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "destroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:5"
            },
            "returnParameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:5"
            },
            "scope": 2091,
            "src": "2365:33:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice destroys an actor\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method\n@dev only actor can destroy account",
            "id": 1992,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeDestroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "2627:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2626:23:5"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:5"
            },
            "scope": 2091,
            "src": "2594:65:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns true if the address passed to it belongs to a cooperative account\n@param _cooperative The address to be checked\n@return true if the address passed to the function belongs to a cooperative false otherwise",
            "id": 1999,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCooperative",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "name": "_cooperative",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "2941:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2940:22:5"
            },
            "returnParameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "2986:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2985:6:5"
            },
            "scope": 2091,
            "src": "2918:74:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns true if the address passed to it belongs to a farmer account\n@param _farmer The address to be checked\n@return true if the address passed to the function belongs to a farmer false otherwise",
            "id": 2006,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2001,
                  "name": "_farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "3254:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3253:17:5"
            },
            "returnParameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "3294:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:6:5"
            },
            "scope": 2091,
            "src": "3236:64:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a certifier\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2013,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3491:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3490:25:5"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3539:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3538:6:5"
            },
            "scope": 2091,
            "src": "3470:75:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a technician\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTechnician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2015,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "3738:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3737:25:5"
            },
            "returnParameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2018,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "3786:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3785:6:5"
            },
            "scope": 2091,
            "src": "3716:76:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a taster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2027,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "3977:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3976:25:5"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "4025:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4024:6:5"
            },
            "scope": 2091,
            "src": "3959:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a validator\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2034,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2029,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "4222:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4221:25:5"
            },
            "returnParameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "4270:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:6:5"
            },
            "scope": 2091,
            "src": "4201:75:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a benefit\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2041,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isBenefit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "4463:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4462:25:5"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "4511:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4510:6:5"
            },
            "scope": 2091,
            "src": "4444:73:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a roaster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2048,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRoaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2048,
                  "src": "4704:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4703:25:5"
            },
            "returnParameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2048,
                  "src": "4752:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4751:6:5"
            },
            "scope": 2091,
            "src": "4685:73:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor is created. ",
            "id": 2054,
            "name": "LogAddActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "4841:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4841:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "indexed": false,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "4872:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4831:60:5"
            },
            "src": "4814:78:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a cooperative creates an Actor. ",
            "id": 2062,
            "name": "LogCooperativeAddActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "4997:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4997:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "5034:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "indexed": false,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "5065:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4987:97:5"
            },
            "src": "4959:126:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor is destroyed. ",
            "id": 2066,
            "name": "LogDestroyActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2064,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "5174:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5174:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:37:5"
            },
            "src": "5143:59:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a cooperative destroys an Actor. ",
            "id": 2072,
            "name": "LogCooperativeDestroyActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "5312:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2070,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "5349:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5302:74:5"
            },
            "src": "5270:107:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor gives permission. ",
            "id": 2080,
            "name": "LogApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2074,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5466:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "indexed": true,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5498:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5498:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5532:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5456:93:5"
            },
            "src": "5439:111:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a Cooperative approves for an Actor. ",
            "id": 2090,
            "name": "LogCooperativeApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5660:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "indexed": true,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5692:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5726:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5726:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5747:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5747:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5650:130:5"
            },
            "src": "5622:159:5"
          }
        ],
        "scope": 2092,
        "src": "25:5758:5"
      }
    ],
    "src": "0:5784:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/IActor.sol",
    "exportedSymbols": {
      "IActor": [
        2091
      ]
    },
    "id": 2092,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1924,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2091,
        "linearizedBaseContracts": [
          2091
        ],
        "name": "IActor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Gets the type of the account.\n@param _owner address of the owner.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 1931,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1926,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1931,
                  "src": "263:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:16:5"
            },
            "returnParameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1929,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1931,
                  "src": "302:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1928,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:9:5"
            },
            "scope": 2091,
            "src": "239:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Gets the type of the sender account.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 1936,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:2:5"
            },
            "returnParameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1936,
                  "src": "518:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "517:9:5"
            },
            "scope": 2091,
            "src": "470:57:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if an actor exists\n@param _actorAddress address of actor to check\n@return true if is exists false if not",
            "id": 1943,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "actorExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "707:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:23:5"
            },
            "returnParameters": {
              "id": 1942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1943,
                  "src": "752:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "751:6:5"
            },
            "scope": 2091,
            "src": "686:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Checks if a user has permission from another user.\n@param _allower address of the allower.\n@param _allowed address of the actor to check if has permission.\n@return returns true if _allowed has permission, false otherwise.",
            "id": 1952,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1054:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1947,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1072:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1053:36:5"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "1113:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1112:6:5"
            },
            "scope": 2091,
            "src": "1035:84:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice creates a new actor from sender\n@param _role type of account of the actor.",
            "id": 1957,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1954,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 1957,
                  "src": "1251:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:15:5"
            },
            "returnParameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:5"
            },
            "scope": 2091,
            "src": "1233:42:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Cooperative creates new actor\n@param _role type of account of the actor.\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method",
            "id": 1964,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeAddActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 1964,
                  "src": "1528:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1964,
                  "src": "1551:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1518:60:5"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:5"
            },
            "scope": 2091,
            "src": "1490:98:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice approves actor\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success",
            "id": 1973,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1792:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1968,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1810:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1791:31:5"
            },
            "returnParameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "1841:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:6:5"
            },
            "scope": 2091,
            "src": "1775:72:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice approves actor from cooperative\n@param _allower address of actor to giving the permission.\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success\n@dev Only Cooperatives can call this method",
            "id": 1984,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2198:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2216:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2216:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1979,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2234:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2234:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2197:49:5"
            },
            "returnParameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1982,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "2266:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2265:6:5"
            },
            "scope": 2091,
            "src": "2170:102:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice destroys an actor\n@dev only actor can destroy account",
            "id": 1987,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "destroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:5"
            },
            "returnParameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:5"
            },
            "scope": 2091,
            "src": "2365:33:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice destroys an actor\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method\n@dev only actor can destroy account",
            "id": 1992,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeDestroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1992,
                  "src": "2627:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2626:23:5"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:5"
            },
            "scope": 2091,
            "src": "2594:65:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns true if the address passed to it belongs to a cooperative account\n@param _cooperative The address to be checked\n@return true if the address passed to the function belongs to a cooperative false otherwise",
            "id": 1999,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCooperative",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "name": "_cooperative",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "2941:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2940:22:5"
            },
            "returnParameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "2986:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2985:6:5"
            },
            "scope": 2091,
            "src": "2918:74:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns true if the address passed to it belongs to a farmer account\n@param _farmer The address to be checked\n@return true if the address passed to the function belongs to a farmer false otherwise",
            "id": 2006,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2001,
                  "name": "_farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "3254:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3253:17:5"
            },
            "returnParameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2006,
                  "src": "3294:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3293:6:5"
            },
            "scope": 2091,
            "src": "3236:64:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a certifier\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2013,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3491:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3490:25:5"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "3539:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3538:6:5"
            },
            "scope": 2091,
            "src": "3470:75:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a technician\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTechnician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2015,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "3738:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3737:25:5"
            },
            "returnParameters": {
              "id": 2019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2018,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "3786:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2017,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3785:6:5"
            },
            "scope": 2091,
            "src": "3716:76:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a taster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2027,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2022,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "3977:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3976:25:5"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2027,
                  "src": "4025:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4024:6:5"
            },
            "scope": 2091,
            "src": "3959:72:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a validator\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2034,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2029,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "4222:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4221:25:5"
            },
            "returnParameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2034,
                  "src": "4270:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:6:5"
            },
            "scope": 2091,
            "src": "4201:75:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a benefit\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2041,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isBenefit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "4463:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4462:25:5"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "4511:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4510:6:5"
            },
            "scope": 2091,
            "src": "4444:73:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice checks if account is a roaster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2048,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRoaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2048,
                  "src": "4704:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4703:25:5"
            },
            "returnParameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2048,
                  "src": "4752:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4751:6:5"
            },
            "scope": 2091,
            "src": "4685:73:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor is created. ",
            "id": 2054,
            "name": "LogAddActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "4841:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4841:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2052,
                  "indexed": false,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2054,
                  "src": "4872:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4831:60:5"
            },
            "src": "4814:78:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a cooperative creates an Actor. ",
            "id": 2062,
            "name": "LogCooperativeAddActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "4997:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4997:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "5034:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "indexed": false,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "5065:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4987:97:5"
            },
            "src": "4959:126:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor is destroyed. ",
            "id": 2066,
            "name": "LogDestroyActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2064,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2066,
                  "src": "5174:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5174:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5164:37:5"
            },
            "src": "5143:59:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a cooperative destroys an Actor. ",
            "id": 2072,
            "name": "LogCooperativeDestroyActor",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2068,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "5312:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2070,
                  "indexed": false,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "5349:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5302:74:5"
            },
            "src": "5270:107:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when an Actor gives permission. ",
            "id": 2080,
            "name": "LogApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2074,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5466:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2076,
                  "indexed": true,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5498:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5498:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2078,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "5532:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5456:93:5"
            },
            "src": "5439:111:5"
          },
          {
            "anonymous": false,
            "documentation": "@notice Logs when a Cooperative approves for an Actor. ",
            "id": 2090,
            "name": "LogCooperativeApproval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5660:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "indexed": true,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5692:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5726:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5726:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "indexed": false,
                  "name": "_cooperativeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "5747:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5747:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5650:130:5"
            },
            "src": "5622:159:5"
          }
        ],
        "scope": 2092,
        "src": "25:5758:5"
      }
    ],
    "src": "0:5784:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.14",
  "updatedAt": "2019-08-31T17:16:39.214Z",
  "devdoc": {
    "methods": {
      "actorExists(address)": {
        "params": {
          "_actorAddress": "address of actor to check"
        },
        "return": "true if is exists false if not"
      },
      "addActor(bytes32)": {
        "params": {
          "_role": "type of account of the actor."
        }
      },
      "approve(address,bool)": {
        "params": {
          "_allowed": "address of actor to assign the permission.",
          "_value": "value to be set."
        },
        "return": "true if is success"
      },
      "cooperativeAddActor(bytes32,address)": {
        "details": "Only Cooperatives can call this method",
        "params": {
          "_actorAddress": "address of the actor.",
          "_role": "type of account of the actor."
        }
      },
      "cooperativeApprove(address,address,bool)": {
        "details": "Only Cooperatives can call this method",
        "params": {
          "_allowed": "address of actor to assign the permission.",
          "_allower": "address of actor to giving the permission.",
          "_value": "value to be set."
        },
        "return": "true if is success"
      },
      "cooperativeDestroyActor(address)": {
        "details": "Only Cooperatives can call this methodonly actor can destroy account",
        "params": {
          "_actorAddress": "address of the actor."
        }
      },
      "destroyActor()": {
        "details": "only actor can destroy account"
      },
      "getAccountType(address)": {
        "params": {
          "_owner": "address of the owner."
        },
        "return": "returns a bytes32 with the type of account or empty if there is no account"
      },
      "getSenderRole()": {
        "return": "returns a bytes32 with the type of account or empty if there is no account"
      },
      "isAllowed(address,address)": {
        "params": {
          "_allowed": "address of the actor to check if has permission.",
          "_allower": "address of the allower."
        },
        "return": "returns true if _allowed has permission, false otherwise."
      },
      "isBenefit(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isCertifier(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isCooperative(address)": {
        "params": {
          "_cooperative": "The address to be checked"
        },
        "return": "true if the address passed to the function belongs to a cooperative false otherwise"
      },
      "isFarmer(address)": {
        "params": {
          "_farmer": "The address to be checked"
        },
        "return": "true if the address passed to the function belongs to a farmer false otherwise"
      },
      "isRoaster(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isTaster(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isTechnician(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isValidator(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      }
    }
  },
  "userdoc": {
    "methods": {
      "actorExists(address)": {
        "notice": "checks if an actor exists"
      },
      "addActor(bytes32)": {
        "notice": "creates a new actor from sender"
      },
      "approve(address,bool)": {
        "notice": "approves actor"
      },
      "cooperativeAddActor(bytes32,address)": {
        "notice": "Cooperative creates new actor"
      },
      "cooperativeApprove(address,address,bool)": {
        "notice": "approves actor from cooperative"
      },
      "cooperativeDestroyActor(address)": {
        "notice": "destroys an actor"
      },
      "destroyActor()": {
        "notice": "destroys an actor"
      },
      "getAccountType(address)": {
        "notice": "Gets the type of the account."
      },
      "getSenderRole()": {
        "notice": "Gets the type of the sender account."
      },
      "isAllowed(address,address)": {
        "notice": "Checks if a user has permission from another user."
      },
      "isBenefit(address)": {
        "notice": "checks if account is a benefit"
      },
      "isCertifier(address)": {
        "notice": "checks if account is a certifier"
      },
      "isCooperative(address)": {
        "notice": "Returns true if the address passed to it belongs to a cooperative account"
      },
      "isFarmer(address)": {
        "notice": "Returns true if the address passed to it belongs to a farmer account"
      },
      "isRoaster(address)": {
        "notice": "checks if account is a roaster"
      },
      "isTaster(address)": {
        "notice": "checks if account is a taster"
      },
      "isTechnician(address)": {
        "notice": "checks if account is a technician"
      },
      "isValidator(address)": {
        "notice": "checks if account is a validator"
      }
    }
  }
}