{
  "contractName": "StubActorFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "LogAddActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "LogCooperativeAddActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "LogDestroyActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "LogCooperativeDestroyActor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_allowed",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "LogApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_allowed",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "_cooperativeAddress",
          "type": "address"
        }
      ],
      "name": "LogCooperativeApproval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getAccountType",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSenderRole",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "actorExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_allower",
          "type": "address"
        },
        {
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "addActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_role",
          "type": "bytes32"
        },
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "cooperativeAddActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_allowed",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_allower",
          "type": "address"
        },
        {
          "name": "_allowed",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "cooperativeApprove",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroyActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_actorAddress",
          "type": "address"
        }
      ],
      "name": "cooperativeDestroyActor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cooperative",
          "type": "address"
        }
      ],
      "name": "isCooperative",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_farmer",
          "type": "address"
        }
      ],
      "name": "isFarmer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isCertifier",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isTechnician",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isTaster",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isValidator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isBenefit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_accountAddress",
          "type": "address"
        }
      ],
      "name": "isRoaster",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isTechnician\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isBenefit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isCertifier\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSenderRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"actorExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"cooperativeDestroyActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isTaster\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"addActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_allower\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"isAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cooperative\",\"type\":\"address\"}],\"name\":\"isCooperative\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAccountType\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_farmer\",\"type\":\"address\"}],\"name\":\"isFarmer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_role\",\"type\":\"bytes32\"},{\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"cooperativeAddActor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isRoaster\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allower\",\"type\":\"address\"},{\"name\":\"_allowed\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"cooperativeApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accountAddress\",\"type\":\"address\"}],\"name\":\"isValidator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"LogAddActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"LogCooperativeAddActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"LogDestroyActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_actorAddress\",\"type\":\"address\"}],\"name\":\"LogCooperativeDestroyActor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_allowed\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"LogApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_allowed\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_cooperativeAddress\",\"type\":\"address\"}],\"name\":\"LogCooperativeApproval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"actorExists(address)\":{\"params\":{\"_actorAddress\":\"address of actor to check\"},\"return\":\"true if is exists false if not\"},\"addActor(bytes32)\":{\"params\":{\"_role\":\"type of account of the actor.\"}},\"approve(address,bool)\":{\"params\":{\"_allowed\":\"address of actor to assign the permission.\",\"_value\":\"value to be set.\"},\"return\":\"true if is success\"},\"cooperativeAddActor(bytes32,address)\":{\"details\":\"Only Cooperatives can call this method\",\"params\":{\"_actorAddress\":\"address of the actor.\",\"_role\":\"type of account of the actor.\"}},\"cooperativeApprove(address,address,bool)\":{\"details\":\"Only Cooperatives can call this method\",\"params\":{\"_allowed\":\"address of actor to assign the permission.\",\"_allower\":\"address of actor to giving the permission.\",\"_value\":\"value to be set.\"},\"return\":\"true if is success\"},\"cooperativeDestroyActor(address)\":{\"details\":\"Only Cooperatives can call this methodonly actor can destroy account\",\"params\":{\"_actorAddress\":\"address of the actor.\"}},\"destroyActor()\":{\"details\":\"only actor can destroy account\"},\"getAccountType(address)\":{\"params\":{\"_owner\":\"address of the owner.\"},\"return\":\"returns a bytes32 with the type of account or empty if there is no account\"},\"getSenderRole()\":{\"return\":\"returns a bytes32 with the type of account or empty if there is no account\"},\"isAllowed(address,address)\":{\"params\":{\"_allowed\":\"address of the actor to check if has permission.\",\"_allower\":\"address of the allower.\"},\"return\":\"returns true if _allowed has permission, false otherwise.\"},\"isBenefit(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isCertifier(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isCooperative(address)\":{\"params\":{\"_cooperative\":\"The address to be checked\"},\"return\":\"true if the address passed to the function belongs to a cooperative false otherwise\"},\"isFarmer(address)\":{\"params\":{\"_farmer\":\"The address to be checked\"},\"return\":\"true if the address passed to the function belongs to a farmer false otherwise\"},\"isRoaster(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isTaster(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isTechnician(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"},\"isValidator(address)\":{\"params\":{\"_accountAddress\":\"address of account to check\"},\"return\":\"true if is exists false if not\"}}},\"userdoc\":{\"methods\":{\"actorExists(address)\":{\"notice\":\"checks if an actor exists\"},\"addActor(bytes32)\":{\"notice\":\"creates a new actor from sender\"},\"approve(address,bool)\":{\"notice\":\"approves actor\"},\"cooperativeAddActor(bytes32,address)\":{\"notice\":\"Cooperative creates new actor\"},\"cooperativeApprove(address,address,bool)\":{\"notice\":\"approves actor from cooperative\"},\"cooperativeDestroyActor(address)\":{\"notice\":\"destroys an actor\"},\"destroyActor()\":{\"notice\":\"destroys an actor\"},\"getAccountType(address)\":{\"notice\":\"Gets the type of the account.\"},\"getSenderRole()\":{\"notice\":\"Gets the type of the sender account.\"},\"isAllowed(address,address)\":{\"notice\":\"Checks if a user has permission from another user.\"},\"isBenefit(address)\":{\"notice\":\"checks if account is a benefit\"},\"isCertifier(address)\":{\"notice\":\"checks if account is a certifier\"},\"isCooperative(address)\":{\"notice\":\"Returns true if the address passed to it belongs to a cooperative account\"},\"isFarmer(address)\":{\"notice\":\"Returns true if the address passed to it belongs to a farmer account\"},\"isRoaster(address)\":{\"notice\":\"checks if account is a roaster\"},\"isTaster(address)\":{\"notice\":\"checks if account is a taster\"},\"isTechnician(address)\":{\"notice\":\"checks if account is a technician\"},\"isValidator(address)\":{\"notice\":\"checks if account is a validator\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/StubActorFactory.sol\":\"StubActorFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/StubActorFactory.sol\":{\"keccak256\":\"0x250ac2100a433c022b63751afb52e16efe5bd3e6ff93d6845a80b1d95eafe24f\",\"urls\":[\"bzzr://f02c184c5da2a6f5db92332009ca91100ad99d91c4eeef215bcdb6217de4d22b\",\"dweb:/ipfs/QmecCbb4Czd4VpeUuytvo6UygUPu8VcDJsMmdsd4eD1NTH\"]},\"/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/interfaces/IActor.sol\":{\"keccak256\":\"0x93adf2cec70c095f7f853e7d494e77c49350c9909eacdd75a6c76a17a0160704\",\"urls\":[\"bzzr://1abe3fe8fcd7805cd2d8f70166685523f43e0fc49d998b2d1fa4834925578dff\",\"dweb:/ipfs/QmXh9uRXQHN1F9wpbGeEyztZMWvBW5AF95yuDCE8LhgCJG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061081e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638920641d116100a2578063b942906911610071578063b942906914610519578063ea535ab114610575578063f6605b07146105c3578063f9338f031461061f578063facd743b146106a757610116565b80638920641d146103bb578063a1654379146103e9578063a3fac13714610465578063ae203146146104c157610116565b80633d140d21116100e95780633d140d211461024d5780636a4cd338146102b55780636db5a1c31461031157806382f34e3a146103555780638793ca55146103b157610116565b80630f5b76fa1461011b57806316ce5b85146101775780631c2353e1146101d35780633a88162e1461022f575b600080fd5b61015d6004803603602081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610703565b604051808215151515815260200191505060405180910390f35b6101b96004803603602081101561018d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070e565b604051808215151515815260200191505060405180910390f35b610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610719565b604051808215151515815260200191505060405180910390f35b610237610724565b6040518082815260200191505060405180910390f35b61029b6004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061074c565b604051808215151515815260200191505060405180910390f35b6102f7600480360360208110156102cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610758565b604051808215151515815260200191505060405180910390f35b6103536004803603602081101561032757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610763565b005b6103976004803603602081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610766565b604051808215151515815260200191505060405180910390f35b6103b9610771565b005b6103e7600480360360208110156103d157600080fd5b8101908080359060200190929190505050610773565b005b61044b600480360360408110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610776565b604051808215151515815260200191505060405180910390f35b6104a76004803603602081101561047b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610782565b604051808215151515815260200191505060405180910390f35b610503600480360360208110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061078d565b6040518082815260200191505060405180910390f35b61055b6004803603602081101561052f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b7565b604051808215151515815260200191505060405180910390f35b6105c16004803603604081101561058b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c2565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c6565b604051808215151515815260200191505060405180910390f35b61068d6004803603606081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506107d1565b604051808215151515815260200191505060405180910390f35b6106e9600480360360208110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107de565b604051808215151515815260200191505060405180910390f35b600060019050919050565b600060019050919050565b600060019050919050565b60007f434f4f5045524154495645000000000000000000000000000000000000000000905090565b60006001905092915050565b600060019050919050565b50565b600060019050919050565b565b50565b60006001905092915050565b600060019050919050565b60007f4641524d455200000000000000000000000000000000000000000000000000009050919050565b600060019050919050565b5050565b600060019050919050565b6000600190509392505050565b60006001905091905056fea265627a7a72305820161d63d28305826a9e2fd9d68379bbbe07133031932a5f7ad460e915cdbc9a7364736f6c63430005090032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638920641d116100a2578063b942906911610071578063b942906914610519578063ea535ab114610575578063f6605b07146105c3578063f9338f031461061f578063facd743b146106a757610116565b80638920641d146103bb578063a1654379146103e9578063a3fac13714610465578063ae203146146104c157610116565b80633d140d21116100e95780633d140d211461024d5780636a4cd338146102b55780636db5a1c31461031157806382f34e3a146103555780638793ca55146103b157610116565b80630f5b76fa1461011b57806316ce5b85146101775780631c2353e1146101d35780633a88162e1461022f575b600080fd5b61015d6004803603602081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610703565b604051808215151515815260200191505060405180910390f35b6101b96004803603602081101561018d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070e565b604051808215151515815260200191505060405180910390f35b610215600480360360208110156101e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610719565b604051808215151515815260200191505060405180910390f35b610237610724565b6040518082815260200191505060405180910390f35b61029b6004803603604081101561026357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061074c565b604051808215151515815260200191505060405180910390f35b6102f7600480360360208110156102cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610758565b604051808215151515815260200191505060405180910390f35b6103536004803603602081101561032757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610763565b005b6103976004803603602081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610766565b604051808215151515815260200191505060405180910390f35b6103b9610771565b005b6103e7600480360360208110156103d157600080fd5b8101908080359060200190929190505050610773565b005b61044b600480360360408110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610776565b604051808215151515815260200191505060405180910390f35b6104a76004803603602081101561047b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610782565b604051808215151515815260200191505060405180910390f35b610503600480360360208110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061078d565b6040518082815260200191505060405180910390f35b61055b6004803603602081101561052f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107b7565b604051808215151515815260200191505060405180910390f35b6105c16004803603604081101561058b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c2565b005b610605600480360360208110156105d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c6565b604051808215151515815260200191505060405180910390f35b61068d6004803603606081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506107d1565b604051808215151515815260200191505060405180910390f35b6106e9600480360360208110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107de565b604051808215151515815260200191505060405180910390f35b600060019050919050565b600060019050919050565b600060019050919050565b60007f434f4f5045524154495645000000000000000000000000000000000000000000905090565b60006001905092915050565b600060019050919050565b50565b600060019050919050565b565b50565b60006001905092915050565b600060019050919050565b60007f4641524d455200000000000000000000000000000000000000000000000000009050919050565b600060019050919050565b5050565b600060019050919050565b6000600190509392505050565b60006001905091905056fea265627a7a72305820161d63d28305826a9e2fd9d68379bbbe07133031932a5f7ad460e915cdbc9a7364736f6c63430005090032",
  "sourceMap": "60:5194:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:5194:8;;;;;;;",
  "deployedSourceMap": "60:5194:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:5194:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4070:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4070:104:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4882:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4882:101:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3796:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3796:103:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;555:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1985:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1985:100:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;808;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;808:100:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2862:67;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2862:67:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;4341:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4341:100:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2631:35;;;:::i;:::-;;1411:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1411:66:8;;;;;;;;;;;;;;;;;:::i;:::-;;1185:112;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1185:112:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3188:102;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3188:102:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;292:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;292:104:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3534:92;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3534:92:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1692:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1692:106:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5151:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5151:101:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2408:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:130:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4611:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4611:103:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4070:104;4140:4;4163;4156:11;;4070:104;;;:::o;4882:101::-;4949:4;4972;4965:11;;4882:101;;;:::o;3796:103::-;3865:4;3888;3881:11;;3796:103;;;:::o;555:94::-;603:7;622:20;;;555:94;:::o;1985:100::-;2051:4;2074;2067:11;;1985:100;;;;:::o;808:::-;874:4;897;890:11;;808:100;;;:::o;2862:67::-;;:::o;4341:100::-;4407:4;4430;4423:11;;4341:100;;;:::o;2631:35::-;:::o;1411:66::-;;:::o;1185:112::-;1263:4;1286;1279:11;;1185:112;;;;:::o;3188:102::-;3256:4;3279;3272:11;;3188:102;;;:::o;292:104::-;355:7;374:15;;;292:104;;;:::o;3534:92::-;3592:4;3615;3608:11;;3534:92;;;:::o;1692:106::-;;;:::o;5151:101::-;5218:4;5241;5234:11;;5151:101;;;:::o;2408:130::-;2504:4;2527;2520:11;;2408:130;;;;;:::o;4611:103::-;4680:4;4703;4696:11;;4611:103;;;:::o",
  "source": "pragma solidity ^0.5.9;\n\nimport \"./interfaces/IActor.sol\";\n\ncontract StubActorFactory is IActor {\n    /** @notice Gets the type of the account.\n      * @param _owner address of the owner.\n      * @return returns a bytes32 with the type of account or empty if there is no account\n      */\n    function getAccountType(address _owner) external view returns (bytes32) {\n        return \"FARMER\";\n    }\n\n    /** @notice Gets the type of the sender account.\n      * @return returns a bytes32 with the type of account or empty if there is no account\n      */\n    function getSenderRole() external view returns (bytes32) {\n        return \"COOPERATIVE\";\n    }\n\n    /** @notice checks if an actor exists\n      * @param _actorAddress address of actor to check\n      * @return true if is exists false if not\n      */\n    function actorExists(address _actorAddress) external view returns(bool) {\n        return true;\n    }\n\n    /** @notice Checks if a user has permission from another user.\n      * @param _allower address of the allower.\n      * @param _allowed address of the actor to check if has permission.\n      * @return returns true if _allowed has permission, false otherwise.\n      */\n    function isAllowed(address _allower, address _allowed) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice creates a new actor from sender\n      * @param _role type of account of the actor.\n      */\n    function addActor(bytes32 _role) external {\n        // NO OP\n    }\n\n    /** @notice Cooperative creates new actor\n      * @param _role type of account of the actor.\n      * @param _actorAddress address of the actor.\n      * @dev Only Cooperatives can call this method\n      */\n    function cooperativeAddActor(\n        bytes32 _role,\n        address _actorAddress\n    ) external {\n\n    }\n\n    /** @notice approves actor\n      * @param _allowed address of actor to assign the permission.\n      * @param _value value to be set.\n      * @return true if is success\n      */\n    function approve(address _allowed, bool _value) external returns (bool) {\n        return true;\n    }\n\n    /** @notice approves actor from cooperative\n      * @param _allower address of actor to giving the permission.\n      * @param _allowed address of actor to assign the permission.\n      * @param _value value to be set.\n      * @return true if is success\n      * @dev Only Cooperatives can call this method\n      */\n    function cooperativeApprove(address _allower, address _allowed, bool _value) external  returns (bool) {\n        return true;\n    }\n\n    /** @notice destroys an actor\n      * @dev only actor can destroy account\n      */\n    function destroyActor() external {}\n\n    /** @notice destroys an actor\n      * @param _actorAddress address of the actor.\n      * @dev Only Cooperatives can call this method\n      * @dev only actor can destroy account\n      */\n    function cooperativeDestroyActor(address _actorAddress) external {}\n\n    /** @notice Returns true if the address passed to it belongs to a cooperative account\n      * @param _cooperative The address to be checked\n      * @return true if the address passed to the function belongs to a cooperative false otherwise\n      */\n    function isCooperative(address _cooperative) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice Returns true if the address passed to it belongs to a farmer account\n      * @param _farmer The address to be checked\n      * @return true if the address passed to the function belongs to a farmer false otherwise\n      */\n    function isFarmer(address _farmer) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a certifier\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isCertifier(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a technician\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isTechnician(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a taster\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isTaster(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a validator\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isValidator(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a benefit\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isBenefit(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n\n    /** @notice checks if account is a roaster\n      * @param _accountAddress address of account to check\n      * @return true if is exists false if not\n      */\n    function isRoaster(address _accountAddress) external view returns (bool) {\n        return true;\n    }\n}",
  "sourcePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/StubActorFactory.sol",
  "ast": {
    "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/StubActorFactory.sol",
    "exportedSymbols": {
      "StubActorFactory": [
        2468
      ]
    },
    "id": 2469,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2294,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/interfaces/IActor.sol",
        "file": "./interfaces/IActor.sol",
        "id": 2295,
        "nodeType": "ImportDirective",
        "scope": 2469,
        "sourceUnit": 2638,
        "src": "25:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2296,
              "name": "IActor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2637,
              "src": "89:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IActor_$2637",
                "typeString": "contract IActor"
              }
            },
            "id": 2297,
            "nodeType": "InheritanceSpecifier",
            "src": "89:6:8"
          }
        ],
        "contractDependencies": [
          2637
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2468,
        "linearizedBaseContracts": [
          2468,
          2637
        ],
        "name": "StubActorFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2306,
              "nodeType": "Block",
              "src": "364:32:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "4641524d4552",
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "381:8:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f309ffc42715a0bfccdfa0c4cac305505f15ab9b9262b7451ceea96c0cc35187",
                      "typeString": "literal_string \"FARMER\""
                    },
                    "value": "FARMER"
                  },
                  "functionReturnParameters": 2303,
                  "id": 2305,
                  "nodeType": "Return",
                  "src": "374:15:8"
                }
              ]
            },
            "documentation": "@notice Gets the type of the account.\n@param _owner address of the owner.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 2307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2307,
                  "src": "316:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:16:8"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2307,
                  "src": "355:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:9:8"
            },
            "scope": 2468,
            "src": "292:104:8",
            "stateMutability": "view",
            "superFunction": 2477,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2314,
              "nodeType": "Block",
              "src": "612:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "434f4f5045524154495645",
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "629:13:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_64fea0a372512a6b5ea4c489f253794d5c161f1020bcefb5c80700d2d1f21e7e",
                      "typeString": "literal_string \"COOPERATIVE\""
                    },
                    "value": "COOPERATIVE"
                  },
                  "functionReturnParameters": 2311,
                  "id": 2313,
                  "nodeType": "Return",
                  "src": "622:20:8"
                }
              ]
            },
            "documentation": "@notice Gets the type of the sender account.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 2315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:2:8"
            },
            "returnParameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2310,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2315,
                  "src": "603:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:9:8"
            },
            "scope": 2468,
            "src": "555:94:8",
            "stateMutability": "view",
            "superFunction": 2482,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "880:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "897:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2321,
                  "id": 2323,
                  "nodeType": "Return",
                  "src": "890:11:8"
                }
              ]
            },
            "documentation": "@notice checks if an actor exists\n@param _actorAddress address of actor to check\n@return true if is exists false if not",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "actorExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "829:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "828:23:8"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "874:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:6:8"
            },
            "scope": 2468,
            "src": "808:100:8",
            "stateMutability": "view",
            "superFunction": 2489,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2336,
              "nodeType": "Block",
              "src": "1269:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1286:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2333,
                  "id": 2335,
                  "nodeType": "Return",
                  "src": "1279:11:8"
                }
              ]
            },
            "documentation": "@notice Checks if a user has permission from another user.\n@param _allower address of the allower.\n@param _allowed address of the actor to check if has permission.\n@return returns true if _allowed has permission, false otherwise.",
            "id": 2337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1204:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1222:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:36:8"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1263:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:8"
            },
            "scope": 2468,
            "src": "1185:112:8",
            "stateMutability": "view",
            "superFunction": 2498,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2342,
              "nodeType": "Block",
              "src": "1453:24:8",
              "statements": []
            },
            "documentation": "@notice creates a new actor from sender\n@param _role type of account of the actor.",
            "id": 2343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2339,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1429:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1428:15:8"
            },
            "returnParameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2468,
            "src": "1411:66:8",
            "stateMutability": "nonpayable",
            "superFunction": 2503,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "1790:8:8",
              "statements": []
            },
            "documentation": "@notice Cooperative creates new actor\n@param _role type of account of the actor.\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method",
            "id": 2351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeAddActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2345,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1730:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1753:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1720:60:8"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:8"
            },
            "scope": 2468,
            "src": "1692:106:8",
            "stateMutability": "nonpayable",
            "superFunction": 2510,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "2057:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2074:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2359,
                  "id": 2361,
                  "nodeType": "Return",
                  "src": "2067:11:8"
                }
              ]
            },
            "documentation": "@notice approves actor\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2002:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2020:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2001:31:8"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2051:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2050:6:8"
            },
            "scope": 2468,
            "src": "1985:100:8",
            "stateMutability": "nonpayable",
            "superFunction": 2519,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "2510:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2527:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2373,
                  "id": 2375,
                  "nodeType": "Return",
                  "src": "2520:11:8"
                }
              ]
            },
            "documentation": "@notice approves actor from cooperative\n@param _allower address of actor to giving the permission.\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success\n@dev Only Cooperatives can call this method",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2365,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2436:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2454:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2472:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2435:49:8"
            },
            "returnParameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2504:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2503:6:8"
            },
            "scope": 2468,
            "src": "2408:130:8",
            "stateMutability": "nonpayable",
            "superFunction": 2530,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "2664:2:8",
              "statements": []
            },
            "documentation": "@notice destroys an actor\n@dev only actor can destroy account",
            "id": 2381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:2:8"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:0:8"
            },
            "scope": 2468,
            "src": "2631:35:8",
            "stateMutability": "nonpayable",
            "superFunction": 2533,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2386,
              "nodeType": "Block",
              "src": "2927:2:8",
              "statements": []
            },
            "documentation": "@notice destroys an actor\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method\n@dev only actor can destroy account",
            "id": 2387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeDestroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2387,
                  "src": "2895:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2894:23:8"
            },
            "returnParameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2927:0:8"
            },
            "scope": 2468,
            "src": "2862:67:8",
            "stateMutability": "nonpayable",
            "superFunction": 2538,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2396,
              "nodeType": "Block",
              "src": "3262:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3279:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2393,
                  "id": 2395,
                  "nodeType": "Return",
                  "src": "3272:11:8"
                }
              ]
            },
            "documentation": "@notice Returns true if the address passed to it belongs to a cooperative account\n@param _cooperative The address to be checked\n@return true if the address passed to the function belongs to a cooperative false otherwise",
            "id": 2397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCooperative",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2389,
                  "name": "_cooperative",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "3211:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3210:22:8"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2392,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "3256:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:6:8"
            },
            "scope": 2468,
            "src": "3188:102:8",
            "stateMutability": "view",
            "superFunction": 2545,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2406,
              "nodeType": "Block",
              "src": "3598:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3615:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2403,
                  "id": 2405,
                  "nodeType": "Return",
                  "src": "3608:11:8"
                }
              ]
            },
            "documentation": "@notice Returns true if the address passed to it belongs to a farmer account\n@param _farmer The address to be checked\n@return true if the address passed to the function belongs to a farmer false otherwise",
            "id": 2407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2399,
                  "name": "_farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "3552:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3551:17:8"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "3592:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3591:6:8"
            },
            "scope": 2468,
            "src": "3534:92:8",
            "stateMutability": "view",
            "superFunction": 2552,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2416,
              "nodeType": "Block",
              "src": "3871:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3888:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2413,
                  "id": 2415,
                  "nodeType": "Return",
                  "src": "3881:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a certifier\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2417,
                  "src": "3817:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:25:8"
            },
            "returnParameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2412,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2417,
                  "src": "3865:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3864:6:8"
            },
            "scope": 2468,
            "src": "3796:103:8",
            "stateMutability": "view",
            "superFunction": 2559,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "4146:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4163:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2423,
                  "id": 2425,
                  "nodeType": "Return",
                  "src": "4156:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a technician\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTechnician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2419,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "4092:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4091:25:8"
            },
            "returnParameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2422,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "4140:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2421,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:6:8"
            },
            "scope": 2468,
            "src": "4070:104:8",
            "stateMutability": "view",
            "superFunction": 2566,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2436,
              "nodeType": "Block",
              "src": "4413:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4430:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2433,
                  "id": 2435,
                  "nodeType": "Return",
                  "src": "4423:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a taster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4359:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4359:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4358:25:8"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4407:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4407:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4406:6:8"
            },
            "scope": 2468,
            "src": "4341:100:8",
            "stateMutability": "view",
            "superFunction": 2573,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2446,
              "nodeType": "Block",
              "src": "4686:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4703:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2443,
                  "id": 2445,
                  "nodeType": "Return",
                  "src": "4696:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a validator\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2439,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2447,
                  "src": "4632:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4632:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4631:25:8"
            },
            "returnParameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2447,
                  "src": "4680:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4679:6:8"
            },
            "scope": 2468,
            "src": "4611:103:8",
            "stateMutability": "view",
            "superFunction": 2580,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2456,
              "nodeType": "Block",
              "src": "4955:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4972:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2453,
                  "id": 2455,
                  "nodeType": "Return",
                  "src": "4965:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a benefit\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBenefit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2449,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "4901:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4900:25:8"
            },
            "returnParameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "4949:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:8"
            },
            "scope": 2468,
            "src": "4882:101:8",
            "stateMutability": "view",
            "superFunction": 2587,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "5224:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5241:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2463,
                  "id": 2465,
                  "nodeType": "Return",
                  "src": "5234:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a roaster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRoaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2459,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5170:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5169:25:8"
            },
            "returnParameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5218:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5218:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5217:6:8"
            },
            "scope": 2468,
            "src": "5151:101:8",
            "stateMutability": "view",
            "superFunction": 2594,
            "visibility": "external"
          }
        ],
        "scope": 2469,
        "src": "60:5194:8"
      }
    ],
    "src": "0:5254:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/StubActorFactory.sol",
    "exportedSymbols": {
      "StubActorFactory": [
        2468
      ]
    },
    "id": 2469,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2294,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/oscarr/Ethereum/wrapped_coffee_coin/contracts/interfaces/IActor.sol",
        "file": "./interfaces/IActor.sol",
        "id": 2295,
        "nodeType": "ImportDirective",
        "scope": 2469,
        "sourceUnit": 2638,
        "src": "25:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2296,
              "name": "IActor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2637,
              "src": "89:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IActor_$2637",
                "typeString": "contract IActor"
              }
            },
            "id": 2297,
            "nodeType": "InheritanceSpecifier",
            "src": "89:6:8"
          }
        ],
        "contractDependencies": [
          2637
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2468,
        "linearizedBaseContracts": [
          2468,
          2637
        ],
        "name": "StubActorFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2306,
              "nodeType": "Block",
              "src": "364:32:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "4641524d4552",
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "381:8:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f309ffc42715a0bfccdfa0c4cac305505f15ab9b9262b7451ceea96c0cc35187",
                      "typeString": "literal_string \"FARMER\""
                    },
                    "value": "FARMER"
                  },
                  "functionReturnParameters": 2303,
                  "id": 2305,
                  "nodeType": "Return",
                  "src": "374:15:8"
                }
              ]
            },
            "documentation": "@notice Gets the type of the account.\n@param _owner address of the owner.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 2307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2307,
                  "src": "316:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:16:8"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2307,
                  "src": "355:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:9:8"
            },
            "scope": 2468,
            "src": "292:104:8",
            "stateMutability": "view",
            "superFunction": 2477,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2314,
              "nodeType": "Block",
              "src": "612:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "434f4f5045524154495645",
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "629:13:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_64fea0a372512a6b5ea4c489f253794d5c161f1020bcefb5c80700d2d1f21e7e",
                      "typeString": "literal_string \"COOPERATIVE\""
                    },
                    "value": "COOPERATIVE"
                  },
                  "functionReturnParameters": 2311,
                  "id": 2313,
                  "nodeType": "Return",
                  "src": "622:20:8"
                }
              ]
            },
            "documentation": "@notice Gets the type of the sender account.\n@return returns a bytes32 with the type of account or empty if there is no account",
            "id": 2315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:2:8"
            },
            "returnParameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2310,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2315,
                  "src": "603:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:9:8"
            },
            "scope": 2468,
            "src": "555:94:8",
            "stateMutability": "view",
            "superFunction": 2482,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "880:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "897:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2321,
                  "id": 2323,
                  "nodeType": "Return",
                  "src": "890:11:8"
                }
              ]
            },
            "documentation": "@notice checks if an actor exists\n@param _actorAddress address of actor to check\n@return true if is exists false if not",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "actorExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "829:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "828:23:8"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "874:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "873:6:8"
            },
            "scope": 2468,
            "src": "808:100:8",
            "stateMutability": "view",
            "superFunction": 2489,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2336,
              "nodeType": "Block",
              "src": "1269:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1286:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2333,
                  "id": 2335,
                  "nodeType": "Return",
                  "src": "1279:11:8"
                }
              ]
            },
            "documentation": "@notice Checks if a user has permission from another user.\n@param _allower address of the allower.\n@param _allowed address of the actor to check if has permission.\n@return returns true if _allowed has permission, false otherwise.",
            "id": 2337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1204:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1222:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:36:8"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2337,
                  "src": "1263:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1262:6:8"
            },
            "scope": 2468,
            "src": "1185:112:8",
            "stateMutability": "view",
            "superFunction": 2498,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2342,
              "nodeType": "Block",
              "src": "1453:24:8",
              "statements": []
            },
            "documentation": "@notice creates a new actor from sender\n@param _role type of account of the actor.",
            "id": 2343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2339,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "1429:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1428:15:8"
            },
            "returnParameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:8"
            },
            "scope": 2468,
            "src": "1411:66:8",
            "stateMutability": "nonpayable",
            "superFunction": 2503,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2350,
              "nodeType": "Block",
              "src": "1790:8:8",
              "statements": []
            },
            "documentation": "@notice Cooperative creates new actor\n@param _role type of account of the actor.\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method",
            "id": 2351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeAddActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2345,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1730:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2351,
                  "src": "1753:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1720:60:8"
            },
            "returnParameters": {
              "id": 2349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:8"
            },
            "scope": 2468,
            "src": "1692:106:8",
            "stateMutability": "nonpayable",
            "superFunction": 2510,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2362,
              "nodeType": "Block",
              "src": "2057:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2074:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2359,
                  "id": 2361,
                  "nodeType": "Return",
                  "src": "2067:11:8"
                }
              ]
            },
            "documentation": "@notice approves actor\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success",
            "id": 2363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2353,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2002:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2355,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2020:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2001:31:8"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2363,
                  "src": "2051:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2050:6:8"
            },
            "scope": 2468,
            "src": "1985:100:8",
            "stateMutability": "nonpayable",
            "superFunction": 2519,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "2510:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2527:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2373,
                  "id": 2375,
                  "nodeType": "Return",
                  "src": "2520:11:8"
                }
              ]
            },
            "documentation": "@notice approves actor from cooperative\n@param _allower address of actor to giving the permission.\n@param _allowed address of actor to assign the permission.\n@param _value value to be set.\n@return true if is success\n@dev Only Cooperatives can call this method",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeApprove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2365,
                  "name": "_allower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2436:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2436:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2367,
                  "name": "_allowed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2454:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2369,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2472:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2435:49:8"
            },
            "returnParameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2372,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "2504:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2503:6:8"
            },
            "scope": 2468,
            "src": "2408:130:8",
            "stateMutability": "nonpayable",
            "superFunction": 2530,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2380,
              "nodeType": "Block",
              "src": "2664:2:8",
              "statements": []
            },
            "documentation": "@notice destroys an actor\n@dev only actor can destroy account",
            "id": 2381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2652:2:8"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:0:8"
            },
            "scope": 2468,
            "src": "2631:35:8",
            "stateMutability": "nonpayable",
            "superFunction": 2533,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2386,
              "nodeType": "Block",
              "src": "2927:2:8",
              "statements": []
            },
            "documentation": "@notice destroys an actor\n@param _actorAddress address of the actor.\n@dev Only Cooperatives can call this method\n@dev only actor can destroy account",
            "id": 2387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cooperativeDestroyActor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "name": "_actorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2387,
                  "src": "2895:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2894:23:8"
            },
            "returnParameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2927:0:8"
            },
            "scope": 2468,
            "src": "2862:67:8",
            "stateMutability": "nonpayable",
            "superFunction": 2538,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2396,
              "nodeType": "Block",
              "src": "3262:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3279:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2393,
                  "id": 2395,
                  "nodeType": "Return",
                  "src": "3272:11:8"
                }
              ]
            },
            "documentation": "@notice Returns true if the address passed to it belongs to a cooperative account\n@param _cooperative The address to be checked\n@return true if the address passed to the function belongs to a cooperative false otherwise",
            "id": 2397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCooperative",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2389,
                  "name": "_cooperative",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "3211:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3210:22:8"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2392,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2397,
                  "src": "3256:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:6:8"
            },
            "scope": 2468,
            "src": "3188:102:8",
            "stateMutability": "view",
            "superFunction": 2545,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2406,
              "nodeType": "Block",
              "src": "3598:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3615:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2403,
                  "id": 2405,
                  "nodeType": "Return",
                  "src": "3608:11:8"
                }
              ]
            },
            "documentation": "@notice Returns true if the address passed to it belongs to a farmer account\n@param _farmer The address to be checked\n@return true if the address passed to the function belongs to a farmer false otherwise",
            "id": 2407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isFarmer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2399,
                  "name": "_farmer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "3552:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3551:17:8"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "3592:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3591:6:8"
            },
            "scope": 2468,
            "src": "3534:92:8",
            "stateMutability": "view",
            "superFunction": 2552,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2416,
              "nodeType": "Block",
              "src": "3871:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3888:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2413,
                  "id": 2415,
                  "nodeType": "Return",
                  "src": "3881:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a certifier\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2417,
                  "src": "3817:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:25:8"
            },
            "returnParameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2412,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2417,
                  "src": "3865:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3864:6:8"
            },
            "scope": 2468,
            "src": "3796:103:8",
            "stateMutability": "view",
            "superFunction": 2559,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "4146:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4163:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2423,
                  "id": 2425,
                  "nodeType": "Return",
                  "src": "4156:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a technician\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTechnician",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2419,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "4092:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4091:25:8"
            },
            "returnParameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2422,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "4140:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2421,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4140:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4139:6:8"
            },
            "scope": 2468,
            "src": "4070:104:8",
            "stateMutability": "view",
            "superFunction": 2566,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2436,
              "nodeType": "Block",
              "src": "4413:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4430:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2433,
                  "id": 2435,
                  "nodeType": "Return",
                  "src": "4423:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a taster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4359:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4359:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4358:25:8"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "4407:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4407:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4406:6:8"
            },
            "scope": 2468,
            "src": "4341:100:8",
            "stateMutability": "view",
            "superFunction": 2573,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2446,
              "nodeType": "Block",
              "src": "4686:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4703:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2443,
                  "id": 2445,
                  "nodeType": "Return",
                  "src": "4696:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a validator\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2439,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2447,
                  "src": "4632:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4632:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4631:25:8"
            },
            "returnParameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2447,
                  "src": "4680:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4679:6:8"
            },
            "scope": 2468,
            "src": "4611:103:8",
            "stateMutability": "view",
            "superFunction": 2580,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2456,
              "nodeType": "Block",
              "src": "4955:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4972:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2453,
                  "id": 2455,
                  "nodeType": "Return",
                  "src": "4965:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a benefit\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBenefit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2449,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "4901:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4900:25:8"
            },
            "returnParameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2452,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "4949:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:8"
            },
            "scope": 2468,
            "src": "4882:101:8",
            "stateMutability": "view",
            "superFunction": 2587,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "5224:28:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5241:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2463,
                  "id": 2465,
                  "nodeType": "Return",
                  "src": "5234:11:8"
                }
              ]
            },
            "documentation": "@notice checks if account is a roaster\n@param _accountAddress address of account to check\n@return true if is exists false if not",
            "id": 2467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRoaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2459,
                  "name": "_accountAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5170:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5169:25:8"
            },
            "returnParameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5218:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5218:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5217:6:8"
            },
            "scope": 2468,
            "src": "5151:101:8",
            "stateMutability": "view",
            "superFunction": 2594,
            "visibility": "external"
          }
        ],
        "scope": 2469,
        "src": "60:5194:8"
      }
    ],
    "src": "0:5254:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x1a55cf9e5988ca515ccaf10544c777cd1796f14c7b4a24b9c4600b902c2a5272": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_actorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_role",
              "type": "bytes32"
            }
          ],
          "name": "LogAddActor",
          "type": "event",
          "signature": "0x1a55cf9e5988ca515ccaf10544c777cd1796f14c7b4a24b9c4600b902c2a5272"
        },
        "0xcf51eacdc6988eb86cd7965439daeb441bc86a3ed1e7857eb6c5b908ea7f84cb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_cooperativeAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_actorAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_role",
              "type": "bytes32"
            }
          ],
          "name": "LogCooperativeAddActor",
          "type": "event",
          "signature": "0xcf51eacdc6988eb86cd7965439daeb441bc86a3ed1e7857eb6c5b908ea7f84cb"
        },
        "0x3b8796b683aeef8d210dbaca7e0b181f822d0bcd120773c175b0e4c29c2f59e7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_actorAddress",
              "type": "address"
            }
          ],
          "name": "LogDestroyActor",
          "type": "event",
          "signature": "0x3b8796b683aeef8d210dbaca7e0b181f822d0bcd120773c175b0e4c29c2f59e7"
        },
        "0xda6ab05fe414c6541fc772ca1443dd86d3b210a23538e759c386381d6b2cc6d5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_cooperativeAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_actorAddress",
              "type": "address"
            }
          ],
          "name": "LogCooperativeDestroyActor",
          "type": "event",
          "signature": "0xda6ab05fe414c6541fc772ca1443dd86d3b210a23538e759c386381d6b2cc6d5"
        },
        "0x6cc438beee050a8338ac87dc4353c517532095b48b678a7e50f680da7e6c7891": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_allowed",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "bool"
            }
          ],
          "name": "LogApproval",
          "type": "event",
          "signature": "0x6cc438beee050a8338ac87dc4353c517532095b48b678a7e50f680da7e6c7891"
        },
        "0xa37d42035b1b045dd4fb0eb340f36a63f5b1b958bfd767654465d7db3f79c431": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_allowed",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "bool"
            },
            {
              "indexed": false,
              "name": "_cooperativeAddress",
              "type": "address"
            }
          ],
          "name": "LogCooperativeApproval",
          "type": "event",
          "signature": "0xa37d42035b1b045dd4fb0eb340f36a63f5b1b958bfd767654465d7db3f79c431"
        }
      },
      "links": {},
      "address": "0x6c762c0f6ed8c55139BEdbE35B22209988118ee6",
      "transactionHash": "0x67c9f613efe5d6eea8e06c4dbfde36fed2e928bc8cd65c6977cd2e18137e9f6a"
    }
  },
  "schemaVersion": "3.0.14",
  "updatedAt": "2019-09-05T18:44:07.170Z",
  "devdoc": {
    "methods": {
      "actorExists(address)": {
        "params": {
          "_actorAddress": "address of actor to check"
        },
        "return": "true if is exists false if not"
      },
      "addActor(bytes32)": {
        "params": {
          "_role": "type of account of the actor."
        }
      },
      "approve(address,bool)": {
        "params": {
          "_allowed": "address of actor to assign the permission.",
          "_value": "value to be set."
        },
        "return": "true if is success"
      },
      "cooperativeAddActor(bytes32,address)": {
        "details": "Only Cooperatives can call this method",
        "params": {
          "_actorAddress": "address of the actor.",
          "_role": "type of account of the actor."
        }
      },
      "cooperativeApprove(address,address,bool)": {
        "details": "Only Cooperatives can call this method",
        "params": {
          "_allowed": "address of actor to assign the permission.",
          "_allower": "address of actor to giving the permission.",
          "_value": "value to be set."
        },
        "return": "true if is success"
      },
      "cooperativeDestroyActor(address)": {
        "details": "Only Cooperatives can call this methodonly actor can destroy account",
        "params": {
          "_actorAddress": "address of the actor."
        }
      },
      "destroyActor()": {
        "details": "only actor can destroy account"
      },
      "getAccountType(address)": {
        "params": {
          "_owner": "address of the owner."
        },
        "return": "returns a bytes32 with the type of account or empty if there is no account"
      },
      "getSenderRole()": {
        "return": "returns a bytes32 with the type of account or empty if there is no account"
      },
      "isAllowed(address,address)": {
        "params": {
          "_allowed": "address of the actor to check if has permission.",
          "_allower": "address of the allower."
        },
        "return": "returns true if _allowed has permission, false otherwise."
      },
      "isBenefit(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isCertifier(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isCooperative(address)": {
        "params": {
          "_cooperative": "The address to be checked"
        },
        "return": "true if the address passed to the function belongs to a cooperative false otherwise"
      },
      "isFarmer(address)": {
        "params": {
          "_farmer": "The address to be checked"
        },
        "return": "true if the address passed to the function belongs to a farmer false otherwise"
      },
      "isRoaster(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isTaster(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isTechnician(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      },
      "isValidator(address)": {
        "params": {
          "_accountAddress": "address of account to check"
        },
        "return": "true if is exists false if not"
      }
    }
  },
  "userdoc": {
    "methods": {
      "actorExists(address)": {
        "notice": "checks if an actor exists"
      },
      "addActor(bytes32)": {
        "notice": "creates a new actor from sender"
      },
      "approve(address,bool)": {
        "notice": "approves actor"
      },
      "cooperativeAddActor(bytes32,address)": {
        "notice": "Cooperative creates new actor"
      },
      "cooperativeApprove(address,address,bool)": {
        "notice": "approves actor from cooperative"
      },
      "cooperativeDestroyActor(address)": {
        "notice": "destroys an actor"
      },
      "destroyActor()": {
        "notice": "destroys an actor"
      },
      "getAccountType(address)": {
        "notice": "Gets the type of the account."
      },
      "getSenderRole()": {
        "notice": "Gets the type of the sender account."
      },
      "isAllowed(address,address)": {
        "notice": "Checks if a user has permission from another user."
      },
      "isBenefit(address)": {
        "notice": "checks if account is a benefit"
      },
      "isCertifier(address)": {
        "notice": "checks if account is a certifier"
      },
      "isCooperative(address)": {
        "notice": "Returns true if the address passed to it belongs to a cooperative account"
      },
      "isFarmer(address)": {
        "notice": "Returns true if the address passed to it belongs to a farmer account"
      },
      "isRoaster(address)": {
        "notice": "checks if account is a roaster"
      },
      "isTaster(address)": {
        "notice": "checks if account is a taster"
      },
      "isTechnician(address)": {
        "notice": "checks if account is a technician"
      },
      "isValidator(address)": {
        "notice": "checks if account is a validator"
      }
    }
  }
}